{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","is_hidden","seconds","data","axies_tuples","pq","marketURL","setState","map","value","_this2","getMarketAxies","interval","setInterval","tick","offset","_this3","url","axios","get","then","res","i","axies","stage","push","id","timeLeft","auction","populatePriorityQ","_this4","TinyQueue","a","b","tup","pop","undefined","length","owner","class","exp","price","buyNowPrice","stats","timeInSeconds","pad","num","size","slice","time","parseFloat","toFixed","hours","Math","floor","minutes","toString","clearInterval","color","_this5","react_default","createElement","style","display","justifyContent","alignItems","height","fontSize","fontFamily","data-tip","marginLeft","dist_default","place","type","effect","overflow","margin","src","className","width","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","user","key","getStyle","sec2time","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6306fa4e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport TinyQueue from 'tinyqueue';\nimport './App.css';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport ReactTooltip from 'react-tooltip'\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { is_hidden: 'block', seconds:[] , data: [] , axies_tuples : [], pq: [] , marketURL : \"https://axieinfinity.com/api/axies?sale=1&sorting=lowest_price&offset=\"};\n    }\n\n    tick() {\n        this.setState(state => ({\n            seconds: state.seconds.map(function(value){return value -1})\n        }));\n    }\n\n    componentDidMount() {\n        this.getMarketAxies(0)\n        this.interval = setInterval(() => this.tick(), 1000);\n    }\n\n    getMarketAxies(offset){\n        let url = this.state.marketURL + offset;\n        axios.get(url)\n            .then(res => {\n                for (let i in res.data.axies) {\n                    if (res.data.axies[i].stage < 3) continue;\n                    this.state.axies_tuples.push({id: res.data.axies[i].id,timeLeft: res.data.axies[i].auction.timeLeft})\n                }\n                if (offset < 100) {\n                    this.getMarketAxies(offset + 12);\n                }\n                else{\n                    this.populatePriorityQ()\n                }\n            })\n    }\n    populatePriorityQ(){\n        this.setState({pq : new TinyQueue(this.state.axies_tuples, function (a, b) {\n          return a.timeLeft - b.timeLeft;})})\n        let tup = this.state.pq.pop()\n        while(tup['timeLeft'] == 0 ){\n            tup = this.state.pq.pop()\n        }\n        tup = this.state.pq.pop()\n        while (tup != undefined){\n            let url = \"https://axieinfinity.com/api/axies/\" + tup['id']\n            this.state.seconds.push(tup['timeLeft'])\n            axios.get(url)\n                .then(res => {\n                    this.state.data.push({timeLeft: this.state.seconds[this.state.seconds.length-1],id: res.data.id, owner: res.data.owner, class: res.data.class, exp: res.data.exp, price: res.data.auction.buyNowPrice/1e18, stats: res.data.stats})\n                })\n            tup = this.state.pq.pop()\n        }\n        this.setState({is_hidden: 'none'})\n    }\n\n    sec2time(timeInSeconds) {\n        var pad = function(num, size) { return ('000' + num).slice(size * -1); },\n            time = parseFloat(timeInSeconds).toFixed(3),\n            hours = Math.floor(time / 60 / 60),\n            minutes = Math.floor(time / 60) % 60,\n            seconds = Math.floor(time - minutes * 60)\n\n        return pad(hours, hours.toString().length) + ':' + pad(minutes, 2) + ':' + pad(seconds, 2) ;\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n    getStyle(i){\n        return {\n            color: i<36000 ? 'red' : 'green'\n        }\n    }\n    render() {\n        return (\n            <div >\n\n                <text style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '10vh', fontSize: '25px',fontFamily: \"Comic Sans MS\",color:\"white\"}}> Jaewoo's Realtime Axie Auction</text>\n                <div>\n                <a data-tip=\"Welcome to the Realtime Axie Auction Tool for Axie Infinity! This project is inspired by the original Axie market.\n                One potential improvement of the market was to show the sale countdowns for each Axie. Mimicing the style of a real auction has certain benefits to the Axie market. Dynamic time information is important for buyers because they can plan out bids for a particular Axie. An auction style view also leads to active participation from the users in the market because countdowns call for immediate action. In summary, this tool hopefully allows users to not miss any Axies by mistake, or gives users the chance to outbid other users at the last moment.\" style={{marginLeft:\"20vh\",color:\"white\"}}> hover over me!  d(`･∀･)b    </a>\n                <ReactTooltip place=\"right\" type=\"dark\" effect=\"solid\" style={{marginLeft:\"20px\"}}/>\n                </div>\n                    <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', overflow: 'auto',margin: 'auto'}}>\n                    <img  src= \"https://axieinfinity.com/assets/images/bdb2b2a03ae24ab6860ceae5ceea3fe6.png\" style = {{margin: 'auto'}} />\n                    </div>\n\n                <div style={{height:'20px'}}></div>\n                <div className=\"col-sm-6\" style={{display: 'block',  justifyContent:'center', alignItems:'center',height: '70vh', width: '120vh', overflow: 'auto',margin: 'auto'}} >\n                    <Paper>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Axie ID</TableCell>\n                                    <TableCell>Time Left</TableCell>\n                                    <TableCell>Price</TableCell>\n                                    <TableCell>Owner</TableCell>\n                                    <TableCell>Class</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    this.state.data.map((user,i) =>\n                                    <TableRow key={i}>\n                                        <TableCell >{user.id}</TableCell>\n                                        <TableCell style={this.getStyle(this.state.seconds[i])}>{this.sec2time(this.state.seconds[i])}</TableCell>\n                                        <TableCell >{user.price}</TableCell>\n                                        <TableCell >{user.owner}</TableCell>\n                                        <TableCell >{user.class}</TableCell>\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                    <div style={{height:'40px'}}></div>\n                    <div className=\"loader\" style={{display: this.state.is_hidden,  justifyContent:'center', alignItems:'center', overflow: 'auto',margin: 'auto'}}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}